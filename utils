import { useSelector } from "react-redux";
import {
  KeyWithAnyModel,
  /*LovInputValRPModel,*/ StoreModel,
} from "../../../utils/model/common-model";
import {
  GetLovDesc,
  resAddressEng,
} from "../../../modules/dashboard/review-page/review-page.utils";
import "./display.scss";
import { CONSTANTS } from "../../../utils/common/constants";
import { getUrl } from "../../../utils/common/change.utils";
import { useEffect, useState } from "react";
import closeIcon from "../../../modules/preApproval/images/icon-cross-black@3x.png";

const Display = (props: KeyWithAnyModel) => {
  const stageSelector = useSelector((state: StoreModel) => state.stages.stages);
  const lovDescSelector = useSelector((state: StoreModel) => state.lovDesc);
  const userInputSelector = useSelector(
    (state: StoreModel) => state.stages.userInput
  );
  const language = getUrl.getLanguageInfo("lang");
  const [ChnResDisplay, setChnResDisplay] = useState(false);
  const [ChnMailDisplay, setChnMailDisplay] = useState(false);

  useEffect(() => {
    if (
      props.data &&
      props.data.logical_field_name === "residential_address_chn" &&
      (userInputSelector?.applicants?.[0]?.res_name_of_street_1 === null ||
        userInputSelector?.applicants?.[0]?.res_name_of_street_1 === undefined ||
        userInputSelector?.applicants?.[0]?.res_name_of_street_1 === "") &&
      (userInputSelector?.applicants?.[0]?.res_building_estate_1 === null ||
        userInputSelector?.applicants?.[0]?.res_building_estate_1 === undefined ||
        userInputSelector?.applicants?.[0]?.res_building_estate_1 === "") &&
      (userInputSelector?.applicants?.[0]?.res_room_flat_1 === null ||
        userInputSelector?.applicants?.[0]?.res_room_flat_1 === undefined ||
        userInputSelector?.applicants?.[0]?.res_room_flat_1 === "")
    ) {
      setChnResDisplay(true);
    } else if (
      props.data &&
      props.data.logical_field_name === "mailing_address_chn" &&
      (userInputSelector.applicants[0].alt_address_same_as_res_address_2 ===
        "N" ||
        userInputSelector.applicants[0].alt_address_same_as_res_address_3 ===
          "N")
    ) {
      if (
        (userInputSelector.applicants[0].res_name_of_street_3 === null ||
          userInputSelector.applicants[0].res_name_of_street_3 === undefined ||
          userInputSelector.applicants[0].res_name_of_street_3 === "") &&
        (userInputSelector.applicants[0].res_room_flat_3 === null ||
          userInputSelector.applicants[0].res_room_flat_3 === undefined ||
          userInputSelector.applicants[0].res_room_flat_3 === "") &&
        (userInputSelector.applicants[0].res_building_estate_3 === null ||
          userInputSelector.applicants[0].res_building_estate_3 === undefined ||
          userInputSelector.applicants[0].res_building_estate_3 === "")
      ) {
        setChnMailDisplay(true);
      }
    } else if (
      props.data &&
      props.data.logical_field_name === "mailing_address_chn" &&
      (userInputSelector.applicants[0].alt_address_same_as_res_address_2 ===
        "Y" ||
        userInputSelector.applicants[0].alt_address_same_as_res_address_3 ===
          "Y")
    ) {
      if (
        (userInputSelector.applicants[0].res_name_of_street_1 === null ||
          userInputSelector.applicants[0].res_name_of_street_1 === undefined ||
          userInputSelector.applicants[0].res_name_of_street_1 === "") &&
        (userInputSelector.applicants[0].res_room_flat_1 === null ||
          userInputSelector.applicants[0].res_room_flat_1 === undefined ||
          userInputSelector.applicants[0].res_room_flat_1 === "") &&
        (userInputSelector.applicants[0].res_building_estate_1 === null ||
          userInputSelector.applicants[0].res_building_estate_1 === undefined ||
          userInputSelector.applicants[0].res_building_estate_1 === "")
      ) {
        setChnMailDisplay(true);
      }
    }
  }, []);

  const getfieldValue = () => {
    let fieldValue = "";
    if (props.data) {
      if (props.data.component_type === "Amount") {
        fieldValue =
          "HKD " +
          userInputSelector.applicants[0][
            props.data.logical_field_name
          ].replace(/\B(?=(\d{3})+(?!\d))/g, ",") +
          ".00";
        return fieldValue;
      }
      if (props.data.logical_field_name === "annual_income_pl") {
        fieldValue =
          "HKD " +
          userInputSelector.applicants[0][
            props.data.logical_field_name
          ].replace(/\B(?=(\d{3})+(?!\d))/g, ",") +
          ".00";
        return fieldValue;
      }
      if (props.data.logical_field_name === "marketing_questionaires") {
        console.log(userInputSelector.applicants[0]
          ,'userInputSelector.applicants[0].marketing_email')
          if(userInputSelector.applicants[0].marketing_email==='Y'){
            fieldValue +='Email'
          }
          if(userInputSelector.applicants[0].marketing_mobile_message==='Y'){
            if(fieldValue) fieldValue += ', ';
            fieldValue +='Mobile Message' 
          }
          if(userInputSelector.applicants[0].marketing_phone_others==='Y'){
            if(fieldValue) fieldValue += ', ';
            fieldValue +='Phone Call (except calls from Relationship Managers or Premium Executive)' 
          }
          if(userInputSelector.applicants[0].marketing_post==='Y'){
            if(fieldValue) fieldValue += ', ';
            fieldValue +='Post' 
          }
          if(userInputSelector.applicants[0].marketing_phone_all==='Y'){
            if(fieldValue) fieldValue += ', ';
            fieldValue +='Phone Call (all calls)' 
          }
        return fieldValue;
      }
      if (props.data.logical_field_name === "HKID") {
        fieldValue =
          userInputSelector.applicants[0][props.data.logical_field_name][0] +
          "-" +
          userInputSelector.applicants[0][
            props.data.logical_field_name
          ].substring(
            1,
            userInputSelector.applicants[0][props.data.logical_field_name]
              .length - 1
          ) +
          "-" +
          userInputSelector.applicants[0][props.data.logical_field_name][
            userInputSelector.applicants[0][props.data.logical_field_name]
              .length - 1
          ];
        return fieldValue;
      }
      if (props.data.component_type === "Phone") {
        fieldValue = userInputSelector.applicants[0][
          props.data.logical_field_name
        ]
          ? "+" + userInputSelector.applicants[0][props.data.logical_field_name]
          : "";
        return fieldValue;
      }
      if(props.data.logical_field_name === "apply_for_pl") {
        fieldValue= "STANDARD CHARTERED PERSONAL INSTALMENT LOAN"
        return fieldValue;
      }
      if (props.data.lov === "Yes") {
        console.log(stageSelector[0].stageInfo.applicants[0][
          props.data.logical_field_name + "_a_1"
        ])
        console.log(lovDescSelector)
        fieldValue = GetLovDesc(
          stageSelector[0].stageInfo.applicants[0][
            props.data.logical_field_name + "_a_1"
          ],
          lovDescSelector,
          props.data.logical_field_name
        );
        console.log(fieldValue)
        return fieldValue;
      } else {
        fieldValue = userInputSelector.applicants[0][props.data.logical_field_name];
        return fieldValue;
      }
    }
  };

  const logicalName=props.data?.logical_field_name;
  let noFieldDisplay=false;
  if(logicalName){
    noFieldDisplay = props && props.data &&
      props.data.logical_field_name === "integrated_deposit_account" ||
      props.data.logical_field_name === "us_resident" ||
      props.data.logical_field_name === "us_citizen" ||
      props.data.logical_field_name === "education_level" ||
      props.data.logical_field_name === "green_card_holder" ||
      props.data.logical_field_name === "home_phone_number" ||
      props.data.logical_field_name === "place_of_birth" ||
      props.data.logical_field_name === "purpose_of_account" ||
      props.data.logical_field_name === "tax_resident_of_any_country_region" ||
      props.data.logical_field_name === "tin_hkid" ||
      props.data.logical_field_name === "tax_resident_other_countries_regions" ||
      props.data.logical_field_name === "referral_pl" ||
      props.data.logical_field_name === "credit_limit_extension" ||
      props.data.logical_field_name === "atm_service" ||
      props.data.logical_field_name === "atm_account_number_1" ||
      props.data.logical_field_name === "atm_account_number_2" || 
      props.data.logical_field_name === "estatement"
  }
  if(props.data.logical_field_name === "monthly_installment_mortgage_payment" && userInputSelector.applicants[0]["other_loans"] === "N") {
    noFieldDisplay =true
  }
  if(props.data.logical_field_name === "total_outstanding_other_loan_amount" && userInputSelector.applicants[0]["other_loans"] === "N") {
    noFieldDisplay =true
  }
  if(props.data.logical_field_name === "total_outstanding_other_monthly_payment" && userInputSelector.applicants[0]["other_loans"] === "N") {
    noFieldDisplay =true
  }
  if(props.data.logical_field_name === "name_of_related_person" && userInputSelector.applicants[0]["related_party"] === "N") {
    noFieldDisplay =true
  }
  if(props.data.logical_field_name === "relationship_of_related_person" && userInputSelector.applicants[0]["related_party"] === "N") {
    noFieldDisplay =true
  }

  return (
    <>
    {noFieldDisplay ? "":
      <div className="display">
        {props &&
          props.data &&
          props.data.component_type !== "authorize" &&
          props.data.default_visibility === null && (
            <>
              <label
               title="display_label_rp"
                htmlFor={props.data.logical_field_name}
                className="display_label_rp"
              >
                <div
                  style={{
                    display: "flex",
                    justifyContent: "space-between",
                    padding: "5px 10px 0 0",
                    lineHeight: "30px",
                  }}
                >
                  {props.data.label_length == 38 && (
                    <span className="banner-icon"></span>
                  )}

                  {props.data.rwb_label_name}

                  {props.data.label_length == 38 && (
                    <div className="hk-headerclose-btnH">
                      <img
                        src={closeIcon}
                        alt="close Icon"
                        className="hk-headerclose-btn"
                      />
                    </div>
                  )}
                </div>
              </label>
              <p>
                {props.data.logical_field_name === "res_address" ||
                props.data.logical_field_name === "office_address"
                  ? resAddressEng(
                    userInputSelector,
                    lovDescSelector,
                    props.data.logical_field_name
                    )
                    : props.data.logical_field_name ===
                      "product_service_information_request" ||
                    props.data.logical_field_name ===
                      "individual_customer_authority_and_identity"
                  ? stageSelector[0].stageInfo.applicants[0][
                    props.data.logical_field_name+"_a_1"
                  ] === "Y"
                  ? language === CONSTANTS.LANG_EN
                  ? CONSTANTS.YES
                  : language === CONSTANTS.LANG_CN
                  ? "是"
                  : "是"
                  : language === CONSTANTS.LANG_EN
                  ? CONSTANTS.NO
                  : language === CONSTANTS.LANG_CN
                  ? "否"
                  : "否"
                  : getfieldValue()}
              </p>
            </>
          )}
      </div>
       } 
    </>
  );
};

export default Display;
