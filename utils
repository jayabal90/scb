import { AppDispatch } from "../../../services/common-service";
import { FindIndex } from "../../../utils/common/change.utils";
import { KeyWithAnyModel, RadioDependecyModel, StageDetails } from "../../../utils/model/common-model";
import { fieldErrorAction } from "../../../utils/store/field-error-slice";

export const getFields = (getStages: Array<StageDetails>, radioResidency: RadioDependecyModel | null): any => {
    return (dispatch: AppDispatch) => {
        let fields: Array<KeyWithAnyModel> | undefined;
        if (getStages && getStages[0]?.stageInfo && getStages[0]?.stageInfo?.fieldMetaData && getStages[0]?.stageInfo?.fieldMetaData?.data?.stages) {
            const stageId = getStages[0]?.stageId;
            const stageIndex = FindIndex(getStages[0]?.stageInfo, stageId);
            fields = getStages[0]?.stageInfo?.fieldMetaData?.data?.stages[stageIndex]?.fields;
        }

        let ssfStages: Array<string> | null = null;

        if (radioResidency) {
            /* Banking services screen condition */ 
            if (radioResidency.logical_field_name === 'marketing_phone_all') {
                let sgYes: Array<string> = [];
                if (radioResidency.value !== '' && radioResidency.value !== null) {
                    if (radioResidency.value === 'N') {
                        sgYes = ["marketing_phone_rm"];
                    }else {
                        sgYes = [];
                    }
                }
                ssfStages = sgYes
            }
        }
        
        if (ssfStages && fields) {
            dispatch(fieldErrorAction.getMandatoryFields(ssfStages));
            const stageComponents = fields.filter((field: KeyWithAnyModel) =>
                ssfStages!.includes(field.logical_field_name)
            );
            return stageComponents;
        }
        return null;
    }
}
