import React from "react";
import { render, screen, fireEvent } from "@testing-library/react";
import { Provider } from "react-redux";
import configureStore from "redux-mock-store";
import Submission from "./Submission"; // adjust path as necessary
import submissionConstant from "../../../assets/_json/submission.json"; 

const mockStore = configureStore([]);

describe("Submission Component", () => {
  let store;

  beforeEach(() => {
    store = mockStore({
      preApproval: {
        formConfigmetaData: {
          products: [{ product_category: "PL" }],
          application: {
            application_reference: "TEST_REF_NO",
          },
        },
      },
    });
  });

  test("renders PL success screen", () => {
    render(
      <Provider store={store}>
        <Submission />
      </Provider>
    );

    expect(screen.getByText(submissionConstant.EN.mainText)).toBeInTheDocument();
    expect(screen.getByText(submissionConstant.EN.nextText)).toBeInTheDocument();
    expect(screen.getByText(submissionConstant.EN.processingPLText)).toBeInTheDocument();
    // Check if the feedback link is present and contains the correct URL
    expect(screen.getByText(/Click here/i).closest('a')).toHaveAttribute('href', `https://surveys.sc.com/jfe/form/SV_9LbvckjbELelJbM?p=PL&m=hk&c=TEST_REF_NO`);
  });

  test("renders NSTP success screen when product category is different", () => {
    store = mockStore({
      preApproval: {
        formConfigmetaData: {
          products: [{ product_category: "NSTP" }],
          application: {
            application_reference: "TEST_REF_NO",
          },
        },
      },
    });

    render(
      <Provider store={store}>
        <Submission />
      </Provider>
    );

    expect(screen.getByText(submissionConstant.EN.mainText)).toBeInTheDocument();
    expect(screen.getByText(submissionConstant.EN.nextText)).toBeInTheDocument();
    expect(screen.getByText(submissionConstant.EN.processingText)).toBeInTheDocument();
  });

  test("displays application reference number", () => {
    render(
      <Provider store={store}>
        <Submission />
      </Provider>
    );

    expect(screen.getByText(/HK24101700230315/i)).toBeInTheDocument();
  });

  test("back button works", () => {
    render(
      <Provider store={store}>
        <Submission />
      </Provider>
    );

    const backButton = screen.getByText(submissionConstant.EN.btnPLText);
    fireEvent.click(backButton);

    expect(window.location.href).toEqual(`${process.env.REACT_APP_HOME_PAGE_URL}`);
  });
});
